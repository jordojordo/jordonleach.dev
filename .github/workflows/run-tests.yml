name: Test Application Build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  unit:
    name: "Vitest tests"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Nodejs and npm
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn

      - name: Run unit tests
        run: |
          yarn test:unit:ci
          mkdir -p coverage-artifacts/coverage/unit
          cp coverage/coverage-final.json coverage-artifacts/coverage/coverage-unit.json

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.run_number}}-${{github.run_attempt}}-coverage
          path: coverage-artifacts/**/*

  e2e:
    name: "Playwright Tests"
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.41.1-jammy
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Nodejs and npm
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup yarn
        run: npm install -g yarn

      - name: Install playwright
        run: |
          yarn
          yarn playwright install --with-deps

      - name: Run playwright tests
        run: |
          HOME=/root yarn test:e2e

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 15

  build:
    name: "Vite build test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Nodejs and npm
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn

      - name: Run build test
        run: |
          yarn build
